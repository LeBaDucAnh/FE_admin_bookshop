[{"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\serviceWorker.js":"2","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\App.js":"3","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\LayoutContext.js":"4","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\UserContext.js":"5","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\index.js":"6","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\Login.js":"8","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\Error.js":"9","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\default.js":"10","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\styles.js":"11","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\styles.js":"12","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\styles.js":"13","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\Charts.js":"14","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\Icons.js":"15","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\tables\\Tables.js":"16","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\Maps.js":"17","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\Notifications.js":"18","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\Typography.js":"19","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\Dashboard.js":"20","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\Sidebar.js":"21","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\Header.js":"22","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\styles.js":"23","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexHeatmap.js":"24","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexLineChart.js":"25","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\mock.js":"26","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\styles.js":"27","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\styles.js":"28","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\styles.js":"29","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\Widget.js":"30","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\PageTitle.js":"31","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\styles.js":"32","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\Dot.js":"33","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\Table\\Table.js":"35","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\styles.js":"36","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"37","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\UserAvatar.js":"38","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\Notification.js":"39","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Wrappers\\Wrappers.js":"40","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\styles.js":"41","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\styles.js":"42","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\styles.js":"43","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"44","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"45","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\styles.js":"46","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\styles.js":"47","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Books.js":"48","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Add_book.js":"49","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Detail_book.js":"50","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Update_book.js":"51","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Authors.js":"52","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Add_author.js":"53","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Update_author.js":"54","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Categories.js":"55","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Review.js":"56","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\User.js":"57","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Orders.js":"58","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detail_order.js":"59","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\utils\\book.js":"60","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\config.js":"61","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Delete_book.js":"62","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Add_category.js":"63","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Update_category.js":"64","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Update_order.js":"65","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Add_user.js":"66","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Update_user.js":"67","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Delete_user.js":"68","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Delete_category.js":"69","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Delete_author.js":"70","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detailorder.js":"71","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Delete_order.js":"72","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Delete_review.js":"73","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\export_excel.js":"74"},{"size":945,"mtime":1680663686521,"results":"75","hashOfConfig":"76"},{"size":5083,"mtime":1680452467779,"results":"77","hashOfConfig":"76"},{"size":1787,"mtime":1680452467750,"results":"78","hashOfConfig":"76"},{"size":1444,"mtime":1680452467763,"results":"79","hashOfConfig":"76"},{"size":2053,"mtime":1680452467763,"results":"80","hashOfConfig":"76"},{"size":534,"mtime":1680452467781,"results":"81","hashOfConfig":"76"},{"size":5306,"mtime":1683364350065,"results":"82","hashOfConfig":"76"},{"size":9192,"mtime":1683374439072,"results":"83","hashOfConfig":"76"},{"size":1626,"mtime":1680452467769,"results":"84","hashOfConfig":"76"},{"size":3127,"mtime":1680452467779,"results":"85","hashOfConfig":"76"},{"size":1395,"mtime":1680452467770,"results":"86","hashOfConfig":"76"},{"size":3281,"mtime":1680452467774,"results":"87","hashOfConfig":"76"},{"size":710,"mtime":1680452467754,"results":"88","hashOfConfig":"76"},{"size":5790,"mtime":1680452467765,"results":"89","hashOfConfig":"76"},{"size":391433,"mtime":1680662292051,"results":"90","hashOfConfig":"76"},{"size":2146,"mtime":1680532891262,"results":"91","hashOfConfig":"76"},{"size":1010,"mtime":1680452467775,"results":"92","hashOfConfig":"76"},{"size":13862,"mtime":1680452467776,"results":"93","hashOfConfig":"76"},{"size":4632,"mtime":1680452467778,"results":"94","hashOfConfig":"76"},{"size":17446,"mtime":1683350245755,"results":"95","hashOfConfig":"76"},{"size":4067,"mtime":1683443350020,"results":"96","hashOfConfig":"76"},{"size":8726,"mtime":1680663188799,"results":"97","hashOfConfig":"76"},{"size":812,"mtime":1680452467773,"results":"98","hashOfConfig":"76"},{"size":1909,"mtime":1680452467765,"results":"99","hashOfConfig":"76"},{"size":1396,"mtime":1680452467765,"results":"100","hashOfConfig":"76"},{"size":4288,"mtime":1680452467768,"results":"101","hashOfConfig":"76"},{"size":178,"mtime":1680452467775,"results":"102","hashOfConfig":"76"},{"size":389,"mtime":1680452467779,"results":"103","hashOfConfig":"76"},{"size":3000,"mtime":1680452467769,"results":"104","hashOfConfig":"76"},{"size":2581,"mtime":1680452467760,"results":"105","hashOfConfig":"76"},{"size":447,"mtime":1680452467755,"results":"106","hashOfConfig":"76"},{"size":4043,"mtime":1680452467752,"results":"107","hashOfConfig":"76"},{"size":902,"mtime":1680452467758,"results":"108","hashOfConfig":"76"},{"size":4160,"mtime":1680452467766,"results":"109","hashOfConfig":"76"},{"size":1323,"mtime":1680576274736,"results":"110","hashOfConfig":"76"},{"size":1363,"mtime":1680452467759,"results":"111","hashOfConfig":"76"},{"size":4589,"mtime":1680452467758,"results":"112","hashOfConfig":"76"},{"size":620,"mtime":1680452467759,"results":"113","hashOfConfig":"76"},{"size":3413,"mtime":1680452467754,"results":"114","hashOfConfig":"76"},{"size":3971,"mtime":1680452467761,"results":"115","hashOfConfig":"76"},{"size":1943,"mtime":1680452467777,"results":"116","hashOfConfig":"76"},{"size":482,"mtime":1680452467756,"results":"117","hashOfConfig":"76"},{"size":1015,"mtime":1680452467761,"results":"118","hashOfConfig":"76"},{"size":1075,"mtime":1680452467766,"results":"119","hashOfConfig":"76"},{"size":1474,"mtime":1680452467758,"results":"120","hashOfConfig":"76"},{"size":291,"mtime":1680452467759,"results":"121","hashOfConfig":"76"},{"size":1040,"mtime":1680452467755,"results":"122","hashOfConfig":"76"},{"size":8528,"mtime":1682738551150,"results":"123","hashOfConfig":"76"},{"size":7539,"mtime":1682513662772,"results":"124","hashOfConfig":"76"},{"size":3866,"mtime":1680933907711,"results":"125","hashOfConfig":"76"},{"size":6732,"mtime":1683130054661,"results":"126","hashOfConfig":"76"},{"size":8229,"mtime":1682518659116,"results":"127","hashOfConfig":"76"},{"size":2424,"mtime":1682518041063,"results":"128","hashOfConfig":"76"},{"size":2732,"mtime":1682518945876,"results":"129","hashOfConfig":"76"},{"size":10721,"mtime":1682352071692,"results":"130","hashOfConfig":"76"},{"size":7557,"mtime":1683300237604,"results":"131","hashOfConfig":"76"},{"size":8215,"mtime":1682347206986,"results":"132","hashOfConfig":"76"},{"size":10465,"mtime":1683443648576,"results":"133","hashOfConfig":"76"},{"size":9408,"mtime":1682844544369,"results":"134","hashOfConfig":"76"},{"size":606,"mtime":1680966389098,"results":"135","hashOfConfig":"76"},{"size":46,"mtime":1680701335630,"results":"136","hashOfConfig":"76"},{"size":1109,"mtime":1682396910675,"results":"137","hashOfConfig":"76"},{"size":1465,"mtime":1682352348772,"results":"138","hashOfConfig":"76"},{"size":1759,"mtime":1682352332170,"results":"139","hashOfConfig":"76"},{"size":2673,"mtime":1682822717337,"results":"140","hashOfConfig":"76"},{"size":2148,"mtime":1683443691949,"results":"141","hashOfConfig":"76"},{"size":2042,"mtime":1682350391401,"results":"142","hashOfConfig":"76"},{"size":1524,"mtime":1682350196921,"results":"143","hashOfConfig":"76"},{"size":1116,"mtime":1683443375646,"results":"144","hashOfConfig":"76"},{"size":1098,"mtime":1683443488328,"results":"145","hashOfConfig":"76"},{"size":4741,"mtime":1682881693418,"results":"146","hashOfConfig":"76"},{"size":1105,"mtime":1683299209814,"results":"147","hashOfConfig":"76"},{"size":1091,"mtime":1683299870302,"results":"148","hashOfConfig":"76"},{"size":2804,"mtime":1683367858296,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},"13ymbae",{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"153"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"153"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"153"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"153"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"153"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"153"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"153"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"153"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"153"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"153"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"153"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"153"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\index.js",["317"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';  \r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\n\r\nReactDOM.render(\r\n  <LayoutProvider>\r\n    <UserProvider>\r\n      <ThemeProvider theme={Themes.default}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </LayoutProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n",["318","319"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\App.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\LayoutContext.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\UserContext.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\index.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\Layout.js",["320","321","322"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\n// import Typography from \"../../pages/typography\";\r\n// import Notifications from \"../../pages/notifications\";\r\n// import Maps from \"../../pages/maps\";\r\n// import Tables from \"../../pages/tables\";\r\n// import Icons from \"../../pages/icons\";\r\n// import Charts from \"../../pages/charts\";\r\nimport Books from \"../../pages/books/Books\";\r\nimport Reviews from \"../../pages/review/Review\";\r\nimport Users from \"../User/User\"; \r\n\r\nimport AddBook from \"../../pages/books/Add_book\";\r\nimport DetailBook from \"../../pages/books/Detail_book\";\r\nimport UpdateBook from \"../../pages/books/Update_book\";\r\nimport Order from \"../../pages/order/Orders\";\r\nimport OrderDetail from \"../../pages/order/Detail_order\";\r\n\r\nimport Authors from \"../../pages/authors/Authors\";\r\nimport AddAuthor from \"../../pages/authors/Add_author\";\r\nimport UpdateAuthor from \"../../pages/authors/Update_author\";\r\nimport Report from \"../../pages/dashboard/export_excel\";\r\nimport Categories from \"../../pages/category/Categories\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/books\" component={Books}/>\r\n              <Route path=\"/app/authors\" component={Authors}/>\r\n              <Route path=\"/app/order\" component={Order}/>\r\n              <Route path=\"/app/category\" component={Categories}/>\r\n              <Route path=\"/app/review\" component={Reviews}/>\r\n              <Route path=\"/app/user\" component={Users}/>\r\n              <Route path=\"/app/book/addbook\" component={AddBook} />\r\n              <Route path=\"/app/book/updatebook/:id\" component={UpdateBook} />\r\n              <Route path=\"/app/book/detailbook/:id\" component={DetailBook}/>\r\n              <Route path=\"/app/order/orderdetail/:id\" component={OrderDetail}/>\r\n              <Route path=\"/app/report/\" component={Report}/>\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={''}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  DUCANH\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={''}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={\"\"}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\Login.js",["323"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\nimport learn from \"./learn.jpg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@gmail.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"ducanh501\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>BOOK Shop Admin</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Đăng nhập\" classes={{ root: classes.tab }} />\r\n            {/* <Tab label=\"New User\" classes={{ root: classes.tab }} /> */}\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                BOOK Shop\r\n              </Typography>\r\n              {/* <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n              {/* <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div> */}\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Email hoặc mật khẩu không đúng :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Mật khẩu\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                )}\r\n                {/* <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Quên mật khẩu\r\n                </Button> */}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Ducanh</a>. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\Error.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\default.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\Charts.js",[],["324","325"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\Dashboard.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n  Legend,\r\n  Bar,\r\n  BarChart,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport axios from 'axios';\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { BASE_URL } from \"../../config\";\r\nconst mainChartData = getMainChartData();\r\n\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  const [orderData, setOrderData] = useState(null);\r\n  const [dailyRevenueData, setDailyRevenueData] = useState([]);\r\n  const [productStatsData, setProductStatsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL +'/api/book/product-stats/').then(res => {\r\n      setProductStatsData(res.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching order statistics', error);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + '/api/transaction/daily-revenue/').then(res => {\r\n      setDailyRevenueData(res.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching order statistics', error);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + '/api/transaction/order_statistics/')\r\n      .then(response => {\r\n        setOrderData(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching order statistics', error);\r\n      });\r\n  }, []);\r\n\r\n  console.log('url', BASE_URL + '/api/transaction/order_statistics/');\r\n  console.log('áddd', orderData);\r\n\r\n  if (!orderData) {\r\n    return (\r\n      <div>Loading...</div>\r\n\r\n    )\r\n  }\r\n  //window.location.reload();\r\n  const COLORS = ['#4BC0C0', '#36A2EB', '#FFCE56', '#FF6384'];\r\n\r\n  const data = [\r\n    { name: 'Chờ xác nhận', value: orderData.values[0] },\r\n    { name: 'Đang giao', value: orderData.values[1] },\r\n    { name: 'Đã giao', value: orderData.values[2] },\r\n    { name: 'Đã hủy', value: orderData.values[3] },\r\n  ];\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                12, 678\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={100}\r\n                height={30}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 10 },\r\n                  { value: 17 },\r\n                  { value: 18 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget> */}\r\n\r\n        </Grid>\r\n        {/* <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart> */}\r\n        {/* <Pie\r\n                      data={chartData}\r\n                      // innerRadius={30}\r\n                      // outerRadius={40}\r\n                      // dataKey=\"value\"\r\n                    /> */}\r\n        {/* {chartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))} */}\r\n\r\n        {/* </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid> */}\r\n        {/* <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {chartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid> */}\r\n        {/* </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Thống kê số lượng sách\r\n                </Typography>\r\n                {/* <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            }\r\n          >\r\n              <BarChart width={1700} height={500} data={productStatsData}>\r\n                <XAxis dataKey=\"name\" label={{ value: 'Sách', position: 'insideBottomRight' }}/>\r\n                <YAxis label={{ value: 'Số lượng', angle: -90, position: 'insideLeft' }}/>\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"inventory\" fill=\"#8884d8\" name=\"Hàng tồn\" />\r\n                <Bar dataKey=\"sales\" fill=\"#82ca9d\" name=\"Hàng bán được\" />\r\n              </BarChart>\r\n          </Widget>\r\n        </Grid>\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))} */}\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <Widget\r\n              title=\"Thống kê đơn hàng\"\r\n              upperTitle\r\n              noBodyPadding\r\n              bodyClass={classes.tableWidget}\r\n            >\r\n              <PieChart width={400} height={300}>\r\n                <Pie\r\n                  data={data}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={100}\r\n                  fill=\"#8884d8\"\r\n                  label\r\n                >\r\n                  {\r\n                    data.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))\r\n                  }\r\n                </Pie>\r\n                <Legend />\r\n              </PieChart>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Widget\r\n              title=\"Doanh thu mỗi ngày\"\r\n              upperTitle\r\n              noBodyPadding\r\n              bodyClass={classes.tableWidget}\r\n            >\r\n              <BarChart width={600} height={400} data={dailyRevenueData}>\r\n                <XAxis dataKey=\"day\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"revenue\" fill=\"#8884d8\" name=\"Doanh thu\" />\r\n              </BarChart>\r\n            </Widget>\r\n          </Grid>\r\n          {/* <Grid item xs={8}>\r\n            <Widget\r\n              title=\"Thống kê sách tồn\"\r\n              upperTitle\r\n              noBodyPadding\r\n              bodyClass={classes.tableWidget}\r\n            >\r\n              <BarChart width={600} height={400} data={productStatsData}>\r\n                <XAxis dataKey=\"name\" label={{ value: 'Sách', position: 'insideBottomLeft' }}/>\r\n                <YAxis label={{ value: 'Số lượng', angle: -90, position: 'insideLeft' }}/>\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"inventory\" fill=\"#8884d8\" name=\"Hàng tồn\" />\r\n                <Bar dataKey=\"sales\" fill=\"#82ca9d\" name=\"Hàng bán được\" />\r\n              </BarChart>\r\n            </Widget>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\Sidebar.js",["345","346","347","348","349","350"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\Header.js",["351","352","353","354","355","356","357","358","359"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Book Shop Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        {/* <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu> */}\r\n        {/* <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu> */}\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Admin\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Books.js",["360","361","362","363","364"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ModalConfirmDeleteBook from './Delete_book';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Books() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [bookList, setBookList] = useState([]);\r\n    const history = useHistory();\r\n    const [bookToDelete, setBookToDelete] = useState(null);\r\n\r\n    const handleClose = () => {setShow(false)};\r\n    const handleDelete = (bookID) => {\r\n        setBookToDelete(bookID);\r\n        setShow(true);\r\n    };\r\n\r\n    const handleViewDetail = (rowData) => {\r\n        const id = rowData[0];\r\n        console.log(id);\r\n        history.push(`/app/book/detailbook/${id}`);\r\n    };\r\n\r\n    const handleViewUpdate = (rowData) => {\r\n        const id = rowData[0];\r\n        console.log(id);\r\n        history.push(`/app/book/updatebook/${id}`);\r\n    };\r\n\r\n\r\n    // Sử dụng useEffect hook để lấy danh sách \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const books = await axios.get(BASE_URL + \"/api/book/books/\");\r\n            setBookList(books.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(\"Sách\", bookList);\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Đầu sách\" />\r\n            <Link to=\"/app/book/addbook\"><Button\r\n                variant=\"primary\"\r\n                onClick={() => console.log(\"Update\")}>\r\n                Thêm sách mới\r\n            </Button></Link>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách đầu sách\"\r\n                        data={bookList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"book_name\",\r\n                                label: \"Tên sách\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"image\",\r\n                                label: \"Hình ảnh\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                        return (\r\n                                            <img src={BASE_URL + value} alt={tableMeta.rowData[0]} style={{ width: 100 }} />\r\n                                        );\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"unit_price\",\r\n                                label: \"Đơn giá\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"qty\",\r\n                                label: \"Số lượng còn\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"total_qty\",\r\n                                label: \"Tổng số lượng\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                        return (\r\n                                            <div className={classes.buttonsContainer}>\r\n                                                {/* <Link to=\"/app/book/detailbook\"> */}\r\n                                                <Button\r\n                                                    variant=\"success\"\r\n                                                    onClick={() => { handleViewDetail(tableMeta.rowData) }}\r\n                                                >\r\n                                                    Chi tiết\r\n                                                </Button>\r\n\r\n                                                {\" \"}\r\n                                                {/* <Link to=\"/app/book/updatebook\"> */}\r\n                                                <Button\r\n                                                    variant=\"primary\"\r\n                                                    onClick={() => { handleViewUpdate(tableMeta.rowData) }}\r\n                                                >\r\n                                                    Sửa\r\n                                                </Button>\r\n                                                {\" \"}\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    onClick={() => {handleDelete(tableMeta.rowData[0])}}\r\n                                                >Xóa</Button>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                }\r\n                            }]\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n\r\n                    />\r\n\r\n                    <ModalConfirmDeleteBook\r\n                        show={show}\r\n                        handleClose={handleClose}\r\n                        bookID = {bookToDelete}\r\n                    />\r\n            </Grid>\r\n        </Grid >\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Add_book.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Detail_book.js",["365","366","367","368","369"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from \"../../config\";\r\n\r\n\r\nexport default function DetailBook({ match }) {\r\n    const { id } = match.params;\r\n    const [bookDetail, setBookDetail] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [authors, setAuthors] = useState([]);\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        \r\n        // Gọi API hoặc lấy dữ liệu từ database để lấy thông tin chi tiết của sách\r\n        const fetchBookDetail = async () => {\r\n          const book = await axios.get(BASE_URL + \"/api/book/books/\"+ id + '/');\r\n          setBookDetail(book.data);\r\n        };\r\n        fetchBookDetail();\r\n      }, []);\r\n      console.log(bookDetail);\r\n    \r\n      if (!bookDetail) {\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table striped bordered hover size=\"lg\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <td colSpan={2}>{bookDetail.id}</td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tên sách</th>\r\n                        <td>{bookDetail.book_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Kích thước</th>\r\n                        <td>{bookDetail.dimensions}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số trang</th>\r\n                        <td>{bookDetail.pages}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày xuất bản</th>\r\n                        <td>{bookDetail.publication_date}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Nhà xuất bản</th>\r\n                        <td>{bookDetail.publisher}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngôn ngữ</th>\r\n                        <td>{bookDetail.language}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Đơn giá</th>\r\n                        <td>{bookDetail.unit_price}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Trạng thái</th>\r\n                        <td>{bookDetail.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số lượng tồn</th>\r\n                        <td>{bookDetail.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tổng số lượng</th>\r\n                        <td>{bookDetail.total_qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Thể loại</th>\r\n                        <td>{bookDetail.category.category_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tác giả</th>\r\n                        <td>{bookDetail.author.author_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Hình ảnh</th>\r\n                        <td><img src={BASE_URL + bookDetail.image} alt={bookDetail.book_name} style={{ width: 100 }}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Mô tả</th>\r\n                        <td>{bookDetail.description}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày tạo</th>\r\n                        <td>{bookDetail.created_at}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày cập nhật</th>\r\n                        <td>{bookDetail.updated_at}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Update_book.js",["370"],"import {Button} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\n\r\nfunction UpdateBook({match}) {\r\n  const { id } = match.params;\r\n  const [book, setBook] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/api/book/books/${id}/`)\r\n      .then(res => {\r\n        setBook(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n      \r\n  }, []);\r\nconsole.log(book);\r\nuseEffect(() => {\r\n  fetch(BASE_URL + '/api/category/categories/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setCategories(data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n  fetch(BASE_URL + '/api/author/authors/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setAuthors(data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  }, []);\r\n\r\n  console.log(categories);\r\n  console.log(authors);\r\n\r\n  const categoryOptions = categories.map((category) => (\r\n    <option key={category.id} value={category.id}>\r\n      {category.category_name}\r\n    </option>\r\n  ));\r\n\r\n\r\n  const authorOptions = authors.map((author) => (\r\n    <option key={author.id} value={author.id}>\r\n      {author.author_name}\r\n    </option>\r\n  ));\r\n  \r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBook({ ...book, [name]: value });\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    const categoryId = event.target.value;\r\n    const category = categories.find((c) => c.id === parseInt(categoryId));\r\n    setBook({ ...book, category });\r\n  };\r\n\r\n  const handleAuthorChange = (event) => {\r\n    const authorId = event.target.value;\r\n    const author = authors.find((a) => a.id === parseInt(authorId));\r\n    setBook({ ...book, author });\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    setBook({ ...book, image: event.target.files[0] });\r\n  };\r\n\r\n  const handleTotalQtyChange = (event) => {\r\n    setBook({ ...book, total_qty: event.target.value })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    axios.put(BASE_URL + \"/api/book/book/\"+ id + '/', book,{\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n      .then(res => {\r\n        history.push('/books/');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n    <Form.Group className=\"mb-3\">\r\n        <Form.Label>Tên sách</Form.Label>\r\n        <Form.Control name=\"book_name\" value={book.book_name} onChange={handleChange}/>\r\n      </Form.Group>\r\n      <Row className=\"mb-3\">\r\n        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n          <Form.Label>Kích thước</Form.Label>\r\n          <Form.Control name=\"dimensions\" value={book.dimensions} onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n          <Form.Label>Số trang</Form.Label>\r\n          <Form.Control type=\"number\" name=\"pages\" value={book.pages} onChange={handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n          <Form.Label>Ngày xuất bản</Form.Label>\r\n          <Form.Control type=\"date\" name=\"publication_date\" value={book.publication_date} onChange={handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Nhà xuất bản</Form.Label>\r\n        <Form.Control type=\"text\" name=\"publisher\" value={book.publisher} onChange={handleChange}/>\r\n      </Form.Group>\r\n      </Row>\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Chọn file ảnh</Form.Label>\r\n        <Form.Control type=\"file\" name=\"image\" onChange={handleImageChange}/>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n        <Form.Label>Mô tả</Form.Label>\r\n        <Form.Control as=\"textarea\" value={book.description} onChange={handleChange}/>\r\n      </Form.Group>\r\n      <Row className=\"mb-3\">\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Đơn giá</Form.Label>\r\n        <Form.Control type=\"number\" name=\"unit_price\" value={book.unit_price} onChange={handleChange}/>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Số lượng nhập thêm</Form.Label>\r\n        <Form.Control type='number' name=\"total_qty\" defaultValue=\"0\" onChange={handleTotalQtyChange}/>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Tổng số lượng</Form.Label>\r\n        <Form.Control type='number' name=\"total_qty\" value={book.total_qty} onChange={handleChange}/>\r\n      </Form.Group>\r\n      \r\n    </Row>\r\n      <Row className=\"mb-3\">\r\n        <Form.Group as={Col} controlId=\"formGridCity\">\r\n          <Form.Label>Thể loại</Form.Label>\r\n          <Form.Select name=\"category\"\r\n          value={book.category ? book.category.id : ''}\r\n          onChange={handleCategoryChange}>\r\n            <option value=\"\">Chọn thể loại</option>\r\n            {categoryOptions}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridState\">\r\n          <Form.Label>Tác giả</Form.Label>\r\n          <Form.Select name=\"author\"\r\n          value={book.author ? book.author.id : ''}\r\n          onChange={handleAuthorChange}>\r\n            <option value=\"\">Chọn tác giả</option>\r\n            {authorOptions}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridZip\">\r\n          <Form.Label>Ngôn ngữ</Form.Label>\r\n          <Form.Control name=\"language\" value={book.language} onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridZip\">\r\n          <Form.Label>Trạng thái</Form.Label>\r\n          <Form.Select name=\"status\" value={book.status} onChange={handleChange}>\r\n            <option value=\"IN STOCK\">Còn hàng</option>\r\n            <option value=\"OUT OF STOCK\">Hết hàng</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n      </Row>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Lưu\r\n      </Button>\r\n        {\" \"}\r\n      <Button variant=\"danger\" type=\"reset\">\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateBook;","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Authors.js",["371","372","373","374","375","376","377","378"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport AddAuthorModal from \"./Add_author\";\r\nimport DeleteAuthorModal from \"./Delete_author\";\r\nimport EditAuthorModal from \"./Update_author\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Authors() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [authorList, setAuthorList] = useState([]);\r\n    const [del, setDel] = useState(false);\r\n    const [selectedAuthorId, setSelectedAuthorId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const authors = await axios.get(BASE_URL + \"/api/author/authors/\");\r\n            setAuthorList(authors.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleCloseUpdate = () => {\r\n        setUpdate(false);\r\n      };\r\n\r\n    const handleAddAuthor = () => {\r\n        setShowModal(true);\r\n      };\r\n    \r\n      const handleCloseModal = () => {\r\n        setShowModal(false);\r\n      };\r\n      const handleCloseDelte = () =>{\r\n        setDel(false);\r\n      }\r\n\r\n      const handleEditAuthor = (authorId) => {\r\n        setSelectedAuthorId(authorId);\r\n        setUpdate(true);\r\n      };\r\n  \r\n      const handleDeleteAuthor = (authorId) => {\r\n        setSelectedAuthorId(authorId);\r\n        setDel(true);\r\n      }\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Tác giả\" />\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={handleAddAuthor}>\r\n                Thêm tác giả mới\r\n            </Button>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách tác giả\"\r\n                        data={authorList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"author_name\",\r\n                                label: \"Tên tác giả\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"author_image\",\r\n                                label: \"Hình ảnh\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                      return (\r\n                                        <img src={BASE_URL + value} alt={tableMeta.rowData[0]} style={{ width: 100 }} />\r\n                                      );\r\n                                    },\r\n                                  },\r\n                              },\r\n                              {\r\n                                name: \"description\",\r\n                                label: \"Mô tả\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    {/* <Link to=\"/app/author/detailauthor\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => handleEditAuthor(tableMeta.rowData[0])}\r\n                                                    >\r\n                                                        <EditIcon/>\r\n                                                    </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={() => handleDeleteAuthor(tableMeta.rowData[0])}\r\n                                                    ><DeleteIcon/></Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n\r\n                    <AddAuthorModal show={showModal} handleClose={handleCloseModal}/>\r\n                    <EditAuthorModal show={update} handleClose={handleCloseUpdate} authorId={selectedAuthorId}/>\r\n                    <DeleteAuthorModal show={del} handleClose={handleCloseDelte} authorId={selectedAuthorId}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Add_author.js",["379","380"],"import {Button, Modal} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\n\r\nconst AddAuthorModal = (props) => {\r\n  const [authorName, setAuthorName] = useState('');\r\n  const [authorImage, setAuthorImage] = useState(null);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleFileInputChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setAuthorImage(file);\r\n  };\r\n\r\n  const handleAddAuthor = () => {\r\n    const data = {\r\n      author_name: authorName,\r\n      author_image: authorImage,\r\n      description: description,\r\n    };\r\n\r\n    axios.post(BASE_URL+'/api/author/authors/', data, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        props.handleClose();\r\n        window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Thêm tác giả mới</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Tên tác giả</Form.Label>\r\n            <Form.Control type=\"text\" value={authorName} onChange={(e) => setAuthorName(e.target.value)}/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n            <Form.Label>Chọn file ảnh tác giả</Form.Label>\r\n            <Form.Control type=\"file\" onChange={handleFileInputChange}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n            <Form.Label>Mô tả</Form.Label>\r\n            <Form.Control as=\"textarea\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleAddAuthor}>\r\n          Lưu\r\n        </Button>\r\n        {\" \"}\r\n        <Button variant=\"danger\" onClick={props.handleClose}>\r\n          Hủy\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAuthorModal;","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Update_author.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Categories.js",["381","382","383","384","385","386","387","388","389","390"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport AddCategoryModal from \"./Add_category\";\r\nimport EditCategoryModal from \"./Update_category\";\r\nimport DeleteCategoryModal from \"./Delete_category\";\r\nimport { BASE_URL } from \"../../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Categories() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [del, setDel] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedCategoryId, setSelectedCategoryId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const categories = await axios.get(BASE_URL + \"/api/category/categories/\");\r\n            console.log(categories);\r\n            setCategoryList(categories.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(\"Thể loại\", categoryList);\r\n\r\n    const handleAddCategory = () => {\r\n        setShowModal(true);\r\n      };\r\n    \r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n      };\r\n      const handleCloseUpdate = () => {\r\n        setUpdate(false);\r\n      };\r\n    \r\n    const handleEditCategory = (categoryId) => {\r\n        setSelectedCategoryId(categoryId);\r\n        setUpdate(true);\r\n      };\r\n\r\n      const handleCloseDelte = () =>{\r\n        setDel(false);\r\n      }\r\n  \r\n      const handleDeleteCategory = (categoryId) => {\r\n        setSelectedCategoryId(categoryId);\r\n        setDel(true);\r\n      }\r\n\r\n    console.log(\"id: \",selectedCategoryId);\r\n    const handleSaveProduct = () => {\r\n        // Tải lại danh sách sản phẩm sau khi thêm thành công\r\n        axios.get(BASE_URL + \"/api/category/categories/\")\r\n          .then(response => {\r\n            setCategoryList(response.data);\r\n            console.log(response.data);\r\n            handleCloseModal();\r\n            handleCloseUpdate();\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      };\r\n    \r\n    return (\r\n        <>\r\n            <PageTitle title=\"Thể loại\" />\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={handleAddCategory}>\r\n                Thêm thể loại mới\r\n            </Button>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách thể loại\"\r\n                        data={categoryList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"category_name\",\r\n                                label: \"Tên thể loại\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              }, \r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              }, \r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => handleEditCategory(tableMeta.rowData[0])}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={() => handleDeleteCategory(tableMeta.rowData[0])}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n\r\n                    <EditCategoryModal show={update} handleClose={handleCloseUpdate} handleSave={handleSaveProduct} categoryID={selectedCategoryId} />\r\n                    <DeleteCategoryModal show={del} handleClose={handleCloseDelte} handleSave={handleSaveProduct} categoryId={selectedCategoryId}/>\r\n                    {/* <Modal show= {show} onHide ={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n                    {/* <Modal show= {add} onHide ={closeAdd} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Thêm thể loại mới</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên thể loại</Form.Label>\r\n                                <Form.Control/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n                    <AddCategoryModal show={showModal} handleClose={handleCloseModal} handleSave={handleSaveProduct} />\r\n\r\n                    {/* <Modal show= {update} onHide ={closeUpdate} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Sửa thể loại</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên thể loại</Form.Label>\r\n                                <Form.Control/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Review.js",["391","392","393","394","395","396","397","398"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport DeleteReviewModal from \"./Delete_review\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Reviews() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [reviewList, setReviewList] = useState([]);\r\n    const [reviewSelected, setReviewSeleted] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const reviews = await axios.get(BASE_URL + \"/api/review/reviews/\");\r\n            setReviewList(reviews.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(reviewList);\r\n    console.log();\r\n\r\n    const handleDelete = (reviewId) =>{\r\n        setReviewSeleted(reviewId);\r\n        setShow(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Bình luận\" />\r\n            {/* <Link to=\"/app/category/addcategory\"><Button\r\n                variant=\"primary\"\r\n                onClick={() => console.log(\"Add\")}>\r\n                Thêm thể loại mới\r\n            </Button></Link> */}\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách bình luận\"\r\n                        data={reviewList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"fullname\",\r\n                                label: \"Họ tên\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"book_name\",\r\n                                label: \"Tên sách\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"star\",\r\n                                label: \"Số sao\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"comment\",\r\n                                label: \"Bình luận\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"uploaded_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    {/* <Link to=\"/app/author/detailauthor\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    {/* <Link to=\"/app/review/updatereview\">\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => console.log(\"Update\")}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={() => {handleDelete(tableMeta.rowData[0])}}\r\n                                                    ><DeleteIcon/></Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                        }}\r\n                    />\r\n                    <DeleteReviewModal show={show} handleClose = {handleClose} reviewId={reviewSelected}/>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\User.js",["399","400","401","402","403","404"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AddUserModal from \"./Add_user\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport EditCustomerModal from \"./Update_user\";\r\nimport ModalConfirmDeleteUser from \"./Delete_user\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Users() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [delet, setDelet] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const customers = await axios.get(BASE_URL + \"/customers/\");\r\n            console.log(customers);\r\n            setCustomers(customers.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAddUser = () => {\r\n        setShowModal(true);\r\n      };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n      };\r\n    \r\n      const handleCloseUpdate = () => {\r\n        setUpdate(false);\r\n      };\r\n    \r\n    const handleEditUser = (userId) => {\r\n        setSelectedUserId(userId);\r\n        console.log(userId);\r\n        setUpdate(true);\r\n      };\r\n    \r\n    const handleCloseDelte = () =>{\r\n      setDelet(false);\r\n    }\r\n\r\n    const handleDeleteUser = (userId) => {\r\n      setSelectedUserId(userId);\r\n      setDelet(true);\r\n    }\r\n\r\n      const handleSaveProduct = () => {\r\n        // Tải lại danh sách sản phẩm sau khi thêm thành công\r\n        axios.get(BASE_URL + \"/customers/\")\r\n          .then(response => {\r\n            setCustomers(response.data);\r\n            console.log(response.data);\r\n            handleCloseModal();\r\n            // handleCloseUpdate();\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      };\r\n    \r\n    return (\r\n        <>\r\n            <PageTitle title=\"Người dùng\" />\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={handleAddUser}>\r\n                Thêm người dùng mới\r\n            </Button>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách người dùng\"\r\n                        data={customers}\r\n                        columns={[\r\n                            {\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"fullname\",\r\n                                label: \"Tên khách hàng\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"email\",\r\n                                label: \"Email\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                        <Button\r\n                                                            variant=\"primary\"\r\n                                                            onClick={() => handleEditUser(tableMeta.rowData[0])}\r\n                                                        >\r\n                                                            Sửa\r\n                                                        </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={()=>handleDeleteUser(tableMeta.rowData[0])}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n                    {/* <Modal show={show} onHide={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n                    <AddUserModal show={showModal} handleClose={handleCloseModal} handleSave={handleSaveProduct} />      \r\n                    <EditCustomerModal show={update} handleClose={handleCloseUpdate} handleSave={handleSaveProduct} customerID={selectedUserId} />\r\n                    <ModalConfirmDeleteUser show={delet} handleClose={handleCloseDelte} handleSave={handleSaveProduct} customerId = {selectedUserId}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Orders.js",["405","406","407","408","409","410","411"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detail_order.js",["412","413","414","415","416","417"],"import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from \"../../config\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nexport default function OrderDetail({ match }) {\r\n    const { id } = match.params;\r\n    console.log(id);\r\n    const [orderDetail, setOrderDetail] = useState({});\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + \"/api/transaction/transaction/\"+ id + '/')\r\n        .then(res=>{\r\n          setOrderDetail(res.data)})\r\n          .catch(err => console.log(err));\r\n      }, [id]);\r\n    console.log(orderDetail);\r\n    return (\r\n        <>\r\n        <PageTitle title=\"Chi tiết đơn hàng\" />\r\n            <Table striped bordered hover size=\"lg\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <td colSpan={2}>{orderDetail.id}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tên khách hàng</th>\r\n                        <td>{orderDetail?.customer.fullname}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tổng tiền</th>\r\n                        <td>{orderDetail.amount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số điện thoại</th>\r\n                        <td>{orderDetail.phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Trạng thái</th>\r\n                        <td>{orderDetail.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Địa chỉ</th>\r\n                        <td>{orderDetail.address}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày tạo</th>\r\n                        <td>{orderDetail.created_at}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày cập nhật</th>\r\n                        <td>{orderDetail.updated_at}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n            {/* <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách đơn hàng\"\r\n                        data={transactionList}\r\n                        columns={\r\n                            [\r\n                            {\r\n                                name: \"id\",\r\n                                label: \"Mã đơn hàng\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"fullname\",\r\n                                label: \"Họ tên\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"phone\",\r\n                                label: \"Số điện thoại\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"amount\",\r\n                                label: \"Tổng tiền\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                            {\r\n                                name: \"status\",\r\n                                label: \"Trạng thái\",\r\n                                options:{\r\n                                    customBodyRender: (status)=>{\r\n                                        let color;\r\n                                        let text;\r\n                                        switch(status){\r\n                                            case 'PENDING':\r\n                                                text = \"Chờ xác nhận\"\r\n                                                color = 'orange';\r\n                                                break;\r\n                                            case 'Completed':\r\n                                                text = \"Thành công\"\r\n                                                color = 'green';\r\n                                                break;\r\n                                            case 'Cancelled':\r\n                                                text = \"Đã hủy\"\r\n                                                color = 'red';\r\n                                                break;\r\n                                            default:\r\n                                                text = \"Đang giao\"\r\n                                                color = 'transparent';\r\n                                                break;\r\n                                        }\r\n                                        return(\r\n                                            <div style={{backgroundColor: color, borderRadius: \"15px\", padding: \"5px\", textAlign: \"center\", color: \"black\"}}>\r\n                                                {text}\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    <Link to=\"/app/order/orderdetail\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => handleEditOrder(tableMeta.rowData[0])}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid> */}\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\utils\\book.js",[],["418","419"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\config.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Delete_book.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Add_category.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Update_category.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Update_order.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Add_user.js",["420"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Update_user.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\Delete_user.js",["421"],"import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { BASE_URL } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ModalConfirmDeleteUser = (props) => {\r\n    const history = useHistory();\r\n    const handleDelete = () => {\r\n        axios.delete(`${BASE_URL}/customer/${props.customerId}/`)\r\n            .then(response => {\r\n                console.log(response);\r\n                props.handleClose();\r\n                toast.success('Xóa thành công!');\r\n                window.location.reload();\r\n\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.handleClose} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Xác nhận xóa khách hàng</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Bạn có chắc chắn muốn xóa trường này không?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.handleClose}>\r\n                    Hủy\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Xóa\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalConfirmDeleteUser;\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Delete_category.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Delete_author.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detailorder.js",["422","423","424","425","426","427"],"import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from \"../../config\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nexport default function OrderDetail(props) {\r\n    const [orderDetail, setOrderDetail] = useState({});\r\n    const [order, setOrder] = useState({});\r\n    const [listorder, setListorder] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + \"/api/transaction/transaction/\"+ props.transid + '/')\r\n        .then(res=>{\r\n          setOrderDetail(res.data)})\r\n          .catch(err => console.log(err));\r\n      }, [props.transid]);\r\n    console.log(orderDetail);\r\n\r\n    useEffect(()=>{\r\n        axios.get(BASE_URL + \"/api/order/order-trans/\"+ orderDetail.id + '/')\r\n        .then(res=>{\r\n          setOrder(res.data)})\r\n          .catch(err => console.log(err));\r\n      }, [orderDetail.id]);\r\n      console.log(order);\r\n\r\n      useEffect(()=>{\r\n        axios.get(BASE_URL + \"/api/order/detail/\"+ order.id + '/')\r\n        .then(res=>{\r\n            const detailsWithBooks = res.data.map(detail => {\r\n                axios.get(BASE_URL + \"/api/book/books/\" + detail.book+ '/')\r\n                  .then(book => {\r\n                    detail.book_name = book.data.book_name;\r\n                  })\r\n                  .catch(error => console.log(error));\r\n                return detail;\r\n                \r\n              });\r\n          setListorder(detailsWithBooks)})\r\n          .catch(err => console.log(err));\r\n      }, [order.id]);\r\n    //   console.log(detailsWithBooks);\r\n      console.log(listorder);\r\n      listorder.forEach(element => {\r\n        console.log(element.book_name);\r\n      });\r\n      \r\n    return (\r\n        <>\r\n        <Modal show={props.show} onHide={props.handleClose} centered>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Chi tiết đơn hàng</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Table striped bordered hover size=\"lg\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <td colSpan={2}>{orderDetail.id}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tên khách hàng</th>\r\n                        <td>{orderDetail.fullname}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tổng tiền</th>\r\n                        <td>{orderDetail.amount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số điện thoại</th>\r\n                        <td>{orderDetail.phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Trạng thái</th>\r\n                        <td>{orderDetail.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Địa chỉ</th>\r\n                        <td>{orderDetail.address}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ghi chú</th>\r\n                        <td>{order.note}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày tạo</th>\r\n                        <td>{orderDetail.created_at}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày cập nhật</th>\r\n                        <td>{orderDetail.updated_at}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>     \r\n\r\n            <div>\r\n            <Table striped bordered hover size=\"lg\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Tên sách</th>\r\n                        <th>Số lượng</th>\r\n                        <th>Đơn giá</th>\r\n                        <th>Tổng giá</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listorder.map(de =>(\r\n                        <tr>\r\n                            <td style={{width: \"200px\", textAlign: \"center\"}}>{de.book_name}</td>\r\n                            <td>{de.qty}</td>\r\n                            <td>{de.unit_price} VNĐ</td>\r\n                            <td>{de.qty * de.unit_price} VNĐ</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n            \r\n            </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Delete_order.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Delete_review.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\export_excel.js",[],{"ruleId":"428","severity":1,"message":"429","line":8,"column":13,"nodeType":"430","messageId":"431","endLine":8,"endColumn":26},{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"428","severity":1,"message":"436","line":5,"column":3,"nodeType":"430","messageId":"431","endLine":5,"endColumn":11},{"ruleId":"428","severity":1,"message":"437","line":45,"column":8,"nodeType":"430","messageId":"431","endLine":45,"endColumn":17},{"ruleId":"428","severity":1,"message":"438","line":46,"column":8,"nodeType":"430","messageId":"431","endLine":46,"endColumn":20},{"ruleId":"428","severity":1,"message":"439","line":21,"column":8,"nodeType":"430","messageId":"431","endLine":21,"endColumn":13},{"ruleId":"432","replacedBy":"440"},{"ruleId":"434","replacedBy":"441"},{"ruleId":"428","severity":1,"message":"442","line":4,"column":3,"nodeType":"430","messageId":"431","endLine":4,"endColumn":17},{"ruleId":"428","severity":1,"message":"443","line":5,"column":3,"nodeType":"430","messageId":"431","endLine":5,"endColumn":9},{"ruleId":"428","severity":1,"message":"444","line":6,"column":3,"nodeType":"430","messageId":"431","endLine":6,"endColumn":16},{"ruleId":"428","severity":1,"message":"445","line":7,"column":3,"nodeType":"430","messageId":"431","endLine":7,"endColumn":11},{"ruleId":"428","severity":1,"message":"446","line":8,"column":3,"nodeType":"430","messageId":"431","endLine":8,"endColumn":9},{"ruleId":"428","severity":1,"message":"447","line":12,"column":3,"nodeType":"430","messageId":"431","endLine":12,"endColumn":22},{"ruleId":"428","severity":1,"message":"448","line":13,"column":3,"nodeType":"430","messageId":"431","endLine":13,"endColumn":16},{"ruleId":"428","severity":1,"message":"449","line":14,"column":3,"nodeType":"430","messageId":"431","endLine":14,"endColumn":12},{"ruleId":"428","severity":1,"message":"450","line":15,"column":3,"nodeType":"430","messageId":"431","endLine":15,"endColumn":12},{"ruleId":"428","severity":1,"message":"451","line":16,"column":3,"nodeType":"430","messageId":"431","endLine":16,"endColumn":7},{"ruleId":"428","severity":1,"message":"452","line":17,"column":3,"nodeType":"430","messageId":"431","endLine":17,"endColumn":7},{"ruleId":"428","severity":1,"message":"453","line":34,"column":8,"nodeType":"430","messageId":"431","endLine":34,"endColumn":12},{"ruleId":"428","severity":1,"message":"454","line":38,"column":8,"nodeType":"430","messageId":"431","endLine":38,"endColumn":11},{"ruleId":"428","severity":1,"message":"455","line":39,"column":8,"nodeType":"430","messageId":"431","endLine":39,"endColumn":13},{"ruleId":"428","severity":1,"message":"456","line":40,"column":8,"nodeType":"430","messageId":"431","endLine":40,"endColumn":15},{"ruleId":"428","severity":1,"message":"457","line":42,"column":7,"nodeType":"430","messageId":"431","endLine":42,"endColumn":20},{"ruleId":"428","severity":1,"message":"458","line":47,"column":7,"nodeType":"430","messageId":"431","endLine":47,"endColumn":12},{"ruleId":"428","severity":1,"message":"459","line":50,"column":8,"nodeType":"430","messageId":"431","endLine":50,"endColumn":22},{"ruleId":"428","severity":1,"message":"460","line":50,"column":24,"nodeType":"430","messageId":"431","endLine":50,"endColumn":41},{"ruleId":"428","severity":1,"message":"461","line":5,"column":24,"nodeType":"430","messageId":"431","endLine":5,"endColumn":41},{"ruleId":"428","severity":1,"message":"462","line":6,"column":17,"nodeType":"430","messageId":"431","endLine":6,"endColumn":31},{"ruleId":"428","severity":1,"message":"463","line":8,"column":16,"nodeType":"430","messageId":"431","endLine":8,"endColumn":25},{"ruleId":"428","severity":1,"message":"464","line":9,"column":21,"nodeType":"430","messageId":"431","endLine":9,"endColumn":32},{"ruleId":"428","severity":1,"message":"465","line":10,"column":19,"nodeType":"430","messageId":"431","endLine":10,"endColumn":30},{"ruleId":"428","severity":1,"message":"454","line":29,"column":8,"nodeType":"430","messageId":"431","endLine":29,"endColumn":11},{"ruleId":"428","severity":1,"message":"466","line":9,"column":3,"nodeType":"430","messageId":"431","endLine":9,"endColumn":6},{"ruleId":"428","severity":1,"message":"467","line":10,"column":3,"nodeType":"430","messageId":"431","endLine":10,"endColumn":7},{"ruleId":"428","severity":1,"message":"468","line":14,"column":18,"nodeType":"430","messageId":"431","endLine":14,"endColumn":26},{"ruleId":"428","severity":1,"message":"461","line":15,"column":24,"nodeType":"430","messageId":"431","endLine":15,"endColumn":41},{"ruleId":"428","severity":1,"message":"469","line":18,"column":11,"nodeType":"430","messageId":"431","endLine":18,"endColumn":19},{"ruleId":"428","severity":1,"message":"470","line":27,"column":10,"nodeType":"430","messageId":"431","endLine":27,"endColumn":15},{"ruleId":"428","severity":1,"message":"446","line":27,"column":29,"nodeType":"430","messageId":"431","endLine":27,"endColumn":35},{"ruleId":"428","severity":1,"message":"471","line":28,"column":8,"nodeType":"430","messageId":"431","endLine":28,"endColumn":20},{"ruleId":"428","severity":1,"message":"472","line":29,"column":8,"nodeType":"430","messageId":"431","endLine":29,"endColumn":18},{"ruleId":"428","severity":1,"message":"473","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"455","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":13},{"ruleId":"428","severity":1,"message":"474","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":18},{"ruleId":"428","severity":1,"message":"453","line":12,"column":8,"nodeType":"430","messageId":"431","endLine":12,"endColumn":12},{"ruleId":"428","severity":1,"message":"475","line":14,"column":8,"nodeType":"430","messageId":"431","endLine":14,"endColumn":13},{"ruleId":"428","severity":1,"message":"476","line":11,"column":12,"nodeType":"430","messageId":"431","endLine":11,"endColumn":22},{"ruleId":"428","severity":1,"message":"477","line":11,"column":24,"nodeType":"430","messageId":"431","endLine":11,"endColumn":37},{"ruleId":"428","severity":1,"message":"478","line":12,"column":12,"nodeType":"430","messageId":"431","endLine":12,"endColumn":19},{"ruleId":"428","severity":1,"message":"479","line":12,"column":21,"nodeType":"430","messageId":"431","endLine":12,"endColumn":31},{"ruleId":"480","severity":1,"message":"481","line":23,"column":10,"nodeType":"482","endLine":23,"endColumn":12,"suggestions":"483"},{"ruleId":"480","severity":1,"message":"481","line":24,"column":6,"nodeType":"482","endLine":24,"endColumn":8,"suggestions":"484"},{"ruleId":"428","severity":1,"message":"473","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"455","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":13},{"ruleId":"428","severity":1,"message":"474","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":18},{"ruleId":"428","severity":1,"message":"453","line":12,"column":8,"nodeType":"430","messageId":"431","endLine":12,"endColumn":12},{"ruleId":"428","severity":1,"message":"467","line":13,"column":10,"nodeType":"430","messageId":"431","endLine":13,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":15,"column":8,"nodeType":"430","messageId":"431","endLine":15,"endColumn":13},{"ruleId":"428","severity":1,"message":"485","line":32,"column":12,"nodeType":"430","messageId":"431","endLine":32,"endColumn":16},{"ruleId":"428","severity":1,"message":"486","line":32,"column":18,"nodeType":"430","messageId":"431","endLine":32,"endColumn":25},{"ruleId":"428","severity":1,"message":"487","line":2,"column":8,"nodeType":"430","messageId":"431","endLine":2,"endColumn":11},{"ruleId":"428","severity":1,"message":"488","line":4,"column":8,"nodeType":"430","messageId":"431","endLine":4,"endColumn":11},{"ruleId":"428","severity":1,"message":"473","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"455","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":13},{"ruleId":"428","severity":1,"message":"474","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":18},{"ruleId":"428","severity":1,"message":"453","line":12,"column":8,"nodeType":"430","messageId":"431","endLine":12,"endColumn":12},{"ruleId":"428","severity":1,"message":"467","line":13,"column":10,"nodeType":"430","messageId":"431","endLine":13,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":15,"column":8,"nodeType":"430","messageId":"431","endLine":15,"endColumn":13},{"ruleId":"428","severity":1,"message":"489","line":17,"column":10,"nodeType":"430","messageId":"431","endLine":17,"endColumn":14},{"ruleId":"428","severity":1,"message":"485","line":32,"column":12,"nodeType":"430","messageId":"431","endLine":32,"endColumn":16},{"ruleId":"428","severity":1,"message":"490","line":35,"column":11,"nodeType":"430","messageId":"431","endLine":35,"endColumn":22},{"ruleId":"428","severity":1,"message":"491","line":36,"column":11,"nodeType":"430","messageId":"431","endLine":36,"endColumn":21},{"ruleId":"428","severity":1,"message":"473","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"455","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":13},{"ruleId":"428","severity":1,"message":"474","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":18},{"ruleId":"428","severity":1,"message":"453","line":12,"column":8,"nodeType":"430","messageId":"431","endLine":12,"endColumn":12},{"ruleId":"428","severity":1,"message":"467","line":13,"column":10,"nodeType":"430","messageId":"431","endLine":13,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":15,"column":8,"nodeType":"430","messageId":"431","endLine":15,"endColumn":13},{"ruleId":"428","severity":1,"message":"492","line":19,"column":18,"nodeType":"430","messageId":"431","endLine":19,"endColumn":26},{"ruleId":"428","severity":1,"message":"491","line":32,"column":11,"nodeType":"430","messageId":"431","endLine":32,"endColumn":21},{"ruleId":"428","severity":1,"message":"467","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":10,"column":8,"nodeType":"430","messageId":"431","endLine":10,"endColumn":13},{"ruleId":"428","severity":1,"message":"489","line":12,"column":10,"nodeType":"430","messageId":"431","endLine":12,"endColumn":14},{"ruleId":"428","severity":1,"message":"485","line":26,"column":12,"nodeType":"430","messageId":"431","endLine":26,"endColumn":16},{"ruleId":"428","severity":1,"message":"490","line":27,"column":11,"nodeType":"430","messageId":"431","endLine":27,"endColumn":22},{"ruleId":"428","severity":1,"message":"491","line":28,"column":11,"nodeType":"430","messageId":"431","endLine":28,"endColumn":21},{"ruleId":"428","severity":1,"message":"467","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":9,"column":8,"nodeType":"430","messageId":"431","endLine":9,"endColumn":13},{"ruleId":"428","severity":1,"message":"493","line":23,"column":7,"nodeType":"430","messageId":"431","endLine":23,"endColumn":13},{"ruleId":"428","severity":1,"message":"485","line":31,"column":12,"nodeType":"430","messageId":"431","endLine":31,"endColumn":16},{"ruleId":"428","severity":1,"message":"490","line":34,"column":11,"nodeType":"430","messageId":"431","endLine":34,"endColumn":22},{"ruleId":"428","severity":1,"message":"491","line":35,"column":11,"nodeType":"430","messageId":"431","endLine":35,"endColumn":21},{"ruleId":"428","severity":1,"message":"494","line":39,"column":11,"nodeType":"430","messageId":"431","endLine":39,"endColumn":18},{"ruleId":"428","severity":1,"message":"467","line":6,"column":10,"nodeType":"430","messageId":"431","endLine":6,"endColumn":14},{"ruleId":"428","severity":1,"message":"475","line":7,"column":8,"nodeType":"430","messageId":"431","endLine":7,"endColumn":13},{"ruleId":"428","severity":1,"message":"446","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"495","line":9,"column":10,"nodeType":"430","messageId":"431","endLine":9,"endColumn":14},{"ruleId":"428","severity":1,"message":"496","line":10,"column":10,"nodeType":"430","messageId":"431","endLine":10,"endColumn":20},{"ruleId":"428","severity":1,"message":"497","line":11,"column":8,"nodeType":"430","messageId":"431","endLine":11,"endColumn":20},{"ruleId":"432","replacedBy":"498"},{"ruleId":"434","replacedBy":"499"},{"ruleId":"428","severity":1,"message":"500","line":5,"column":10,"nodeType":"430","messageId":"431","endLine":5,"endColumn":20},{"ruleId":"428","severity":1,"message":"494","line":10,"column":11,"nodeType":"430","messageId":"431","endLine":10,"endColumn":18},{"ruleId":"428","severity":1,"message":"501","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":17},{"ruleId":"428","severity":1,"message":"467","line":6,"column":10,"nodeType":"430","messageId":"431","endLine":6,"endColumn":14},{"ruleId":"428","severity":1,"message":"446","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":14},{"ruleId":"428","severity":1,"message":"495","line":9,"column":10,"nodeType":"430","messageId":"431","endLine":9,"endColumn":14},{"ruleId":"428","severity":1,"message":"496","line":10,"column":10,"nodeType":"430","messageId":"431","endLine":10,"endColumn":20},{"ruleId":"428","severity":1,"message":"497","line":11,"column":8,"nodeType":"430","messageId":"431","endLine":11,"endColumn":20},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["502"],"no-negated-in-lhs",["503"],"'Redirect' is defined but never used.","'AddAuthor' is defined but never used.","'UpdateAuthor' is defined but never used.","'learn' is defined but never used.",["502"],["503"],"'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'mock' is defined but never used.","'Dot' is defined but never used.","'Table' is defined but never used.","'BigStat' is defined but never used.","'mainChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'Fab' is defined but never used.","'Link' is defined but never used.","'MailIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'Widget' is defined but never used.","'classnames' is defined but never used.","'Modal' is defined but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'authors' is assigned a value but never used.","'setAuthors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["504"],["505"],"'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'EditIcon' is defined but never used.","'states' is assigned a value but never used.","'history' is assigned a value but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'MUIDataTable' is defined but never used.",["502"],["503"],"'useHistory' is defined but never used.","'PageTitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"506","fix":"507"},{"desc":"506","fix":"508"},"Update the dependencies array to be: [id]",{"range":"509","text":"510"},{"range":"511","text":"510"},[769,771],"[id]",[762,764]]