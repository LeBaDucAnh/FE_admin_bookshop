[{"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\serviceWorker.js":"2","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\App.js":"3","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\LayoutContext.js":"4","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\UserContext.js":"5","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\index.js":"6","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\Login.js":"8","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\Error.js":"9","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\default.js":"10","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\styles.js":"11","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\styles.js":"12","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\styles.js":"13","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\Charts.js":"14","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\Icons.js":"15","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\tables\\Tables.js":"16","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\Maps.js":"17","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\Notifications.js":"18","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\Typography.js":"19","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\Dashboard.js":"20","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\Sidebar.js":"21","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\Header.js":"22","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\styles.js":"23","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexHeatmap.js":"24","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexLineChart.js":"25","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\mock.js":"26","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\styles.js":"27","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\styles.js":"28","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\styles.js":"29","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\Widget.js":"30","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\PageTitle.js":"31","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\styles.js":"32","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\Dot.js":"33","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\Table\\Table.js":"35","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\styles.js":"36","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"37","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\UserAvatar.js":"38","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\Notification.js":"39","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Wrappers\\Wrappers.js":"40","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\styles.js":"41","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\styles.js":"42","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\styles.js":"43","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"44","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"45","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\styles.js":"46","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\styles.js":"47","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Books.js":"48","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Add_book.js":"49","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Detail_book.js":"50","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Update_book.js":"51","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Authors.js":"52","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Add_author.js":"53","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Update_author.js":"54","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Categories.js":"55","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Review.js":"56","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\User.js":"57","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Orders.js":"58","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detail_order.js":"59","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\utils\\book.js":"60","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\config.js":"61"},{"size":945,"mtime":1680663686521,"results":"62","hashOfConfig":"63"},{"size":5083,"mtime":1680452467779,"results":"64","hashOfConfig":"63"},{"size":1787,"mtime":1680452467750,"results":"65","hashOfConfig":"63"},{"size":1444,"mtime":1680452467763,"results":"66","hashOfConfig":"63"},{"size":2053,"mtime":1680452467763,"results":"67","hashOfConfig":"63"},{"size":534,"mtime":1680452467781,"results":"68","hashOfConfig":"63"},{"size":6010,"mtime":1680934429115,"results":"69","hashOfConfig":"63"},{"size":9197,"mtime":1680681047638,"results":"70","hashOfConfig":"63"},{"size":1626,"mtime":1680452467769,"results":"71","hashOfConfig":"63"},{"size":3127,"mtime":1680452467779,"results":"72","hashOfConfig":"63"},{"size":1395,"mtime":1680452467770,"results":"73","hashOfConfig":"63"},{"size":3281,"mtime":1680452467774,"results":"74","hashOfConfig":"63"},{"size":710,"mtime":1680452467754,"results":"75","hashOfConfig":"63"},{"size":5790,"mtime":1680452467765,"results":"76","hashOfConfig":"63"},{"size":391433,"mtime":1680662292051,"results":"77","hashOfConfig":"63"},{"size":2146,"mtime":1680532891262,"results":"78","hashOfConfig":"63"},{"size":1010,"mtime":1680452467775,"results":"79","hashOfConfig":"63"},{"size":13862,"mtime":1680452467776,"results":"80","hashOfConfig":"63"},{"size":4632,"mtime":1680452467778,"results":"81","hashOfConfig":"63"},{"size":16036,"mtime":1680681415963,"results":"82","hashOfConfig":"63"},{"size":4703,"mtime":1680662548281,"results":"83","hashOfConfig":"63"},{"size":8726,"mtime":1680663188799,"results":"84","hashOfConfig":"63"},{"size":812,"mtime":1680452467773,"results":"85","hashOfConfig":"63"},{"size":1909,"mtime":1680452467765,"results":"86","hashOfConfig":"63"},{"size":1396,"mtime":1680452467765,"results":"87","hashOfConfig":"63"},{"size":4288,"mtime":1680452467768,"results":"88","hashOfConfig":"63"},{"size":178,"mtime":1680452467775,"results":"89","hashOfConfig":"63"},{"size":389,"mtime":1680452467779,"results":"90","hashOfConfig":"63"},{"size":3000,"mtime":1680452467769,"results":"91","hashOfConfig":"63"},{"size":2581,"mtime":1680452467760,"results":"92","hashOfConfig":"63"},{"size":447,"mtime":1680452467755,"results":"93","hashOfConfig":"63"},{"size":4043,"mtime":1680452467752,"results":"94","hashOfConfig":"63"},{"size":902,"mtime":1680452467758,"results":"95","hashOfConfig":"63"},{"size":4160,"mtime":1680452467766,"results":"96","hashOfConfig":"63"},{"size":1323,"mtime":1680576274736,"results":"97","hashOfConfig":"63"},{"size":1363,"mtime":1680452467759,"results":"98","hashOfConfig":"63"},{"size":4589,"mtime":1680452467758,"results":"99","hashOfConfig":"63"},{"size":620,"mtime":1680452467759,"results":"100","hashOfConfig":"63"},{"size":3413,"mtime":1680452467754,"results":"101","hashOfConfig":"63"},{"size":3971,"mtime":1680452467761,"results":"102","hashOfConfig":"63"},{"size":1943,"mtime":1680452467777,"results":"103","hashOfConfig":"63"},{"size":482,"mtime":1680452467756,"results":"104","hashOfConfig":"63"},{"size":1015,"mtime":1680452467761,"results":"105","hashOfConfig":"63"},{"size":1075,"mtime":1680452467766,"results":"106","hashOfConfig":"63"},{"size":1474,"mtime":1680452467758,"results":"107","hashOfConfig":"63"},{"size":291,"mtime":1680452467759,"results":"108","hashOfConfig":"63"},{"size":1040,"mtime":1680452467755,"results":"109","hashOfConfig":"63"},{"size":11060,"mtime":1681013622031,"results":"110","hashOfConfig":"63"},{"size":7367,"mtime":1680890196344,"results":"111","hashOfConfig":"63"},{"size":3866,"mtime":1680933907711,"results":"112","hashOfConfig":"63"},{"size":6246,"mtime":1680962499187,"results":"113","hashOfConfig":"63"},{"size":8306,"mtime":1680703600465,"results":"114","hashOfConfig":"63"},{"size":943,"mtime":1680597867846,"results":"115","hashOfConfig":"63"},{"size":949,"mtime":1680598012658,"results":"116","hashOfConfig":"63"},{"size":10625,"mtime":1680689592988,"results":"117","hashOfConfig":"63"},{"size":8755,"mtime":1680798402504,"results":"118","hashOfConfig":"63"},{"size":10910,"mtime":1680665623006,"results":"119","hashOfConfig":"63"},{"size":7740,"mtime":1680666197273,"results":"120","hashOfConfig":"63"},{"size":2343,"mtime":1680595373661,"results":"121","hashOfConfig":"63"},{"size":606,"mtime":1680966389098,"results":"122","hashOfConfig":"63"},{"size":46,"mtime":1680701335630,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},"13ymbae",{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"127"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"127"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"127"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"226","messages":"227","errorCount":1,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"127"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"127"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"127"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"127"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"127"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"127"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"127"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"127"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\index.js",["264"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';  \r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\n\r\nReactDOM.render(\r\n  <LayoutProvider>\r\n    <UserProvider>\r\n      <ThemeProvider theme={Themes.default}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </LayoutProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n",["265","266"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\App.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\LayoutContext.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\context\\UserContext.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\index.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\Layout.js",["267"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\n// import Typography from \"../../pages/typography\";\r\n// import Notifications from \"../../pages/notifications\";\r\n// import Maps from \"../../pages/maps\";\r\n// import Tables from \"../../pages/tables\";\r\n// import Icons from \"../../pages/icons\";\r\n// import Charts from \"../../pages/charts\";\r\nimport Books from \"../../pages/books/Books\";\r\nimport Reviews from \"../../pages/review/Review\";\r\nimport Users from \"../User/User\"; \r\n\r\nimport AddBook from \"../../pages/books/Add_book\";\r\nimport DetailBook from \"../../pages/books/Detail_book\";\r\nimport UpdateBook from \"../../pages/books/Update_book\";\r\nimport Order from \"../../pages/order/Orders\";\r\nimport Orderdetail from \"../../pages/order/Detail_order\";\r\n\r\nimport Authors from \"../../pages/authors/Authors\";\r\nimport AddAuthor from \"../../pages/authors/Add_author\";\r\nimport UpdateAuthor from \"../../pages/authors/Update_author\";\r\n\r\nimport Categories from \"../../pages/category/Categories\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/books\" component={Books}/>\r\n              <Route path=\"/app/authors\" component={Authors}/>\r\n              <Route path=\"/app/order\" component={Order}/>\r\n              <Route path=\"/app/category\" component={Categories}/>\r\n              <Route path=\"/app/review\" component={Reviews}/>\r\n              <Route path=\"/app/user\" component={Users}/>\r\n              {/* <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/tables\" component={Tables} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              /> */}\r\n              {/* <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} /> */}\r\n              <Route path=\"/app/book/addbook\" component={AddBook} />\r\n              <Route path=\"/app/book/updatebook/:id\" component={UpdateBook} />\r\n              <Route path=\"/app/book/detailbook/:id\" component={DetailBook}/>\r\n              <Route path=\"/app/order/orderdetail\" component={Orderdetail}/>\r\n              <Route path=\"/app/author/addauthor\" component={AddAuthor}/>\r\n              <Route path=\"/app/author/updateauthor\" component={UpdateAuthor}/>\r\n             \r\n              {/* <Route path=\"/app/user/adduser/\" component={AddUser}/> */}\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={''}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  DUCANH\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={''}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={\"\"}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={''}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\Login.js",["268"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\nimport learn from \"./learn.jpg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>BOOK Shop Admin</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Đăng nhập\" classes={{ root: classes.tab }} />\r\n            {/* <Tab label=\"New User\" classes={{ root: classes.tab }} /> */}\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                BOOK Shop\r\n              </Typography>\r\n              {/* <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n              {/* <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div> */}\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Quên mật khẩu\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Ducanh</a>. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\Error.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\themes\\default.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\error\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\login\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Layout\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\Charts.js",[],["269","270"],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\Dashboard.js",["271","272","273","274","275","276","277","278","279"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\"/>\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                12, 678\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={100}\r\n                height={30}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 10 },\r\n                  { value: 17 },\r\n                  { value: 18 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          {/* <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget> */}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))} */}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Đơn hàng gần đây\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\Sidebar.js",["280","281","282","283","284"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Book as BookIcon,\r\n  People as PeopleIcon,\r\n  ShoppingCart as CartIcon,\r\n  Person as UserIcon,\r\n  Comment as CommentIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Quản lý sách\",\r\n    link: \"/app/books\",\r\n    icon: <BookIcon />,\r\n  },\r\n  // { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Quản lý thư mục\",\r\n    link: \"/app/category\",\r\n    icon: <UIElementsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Quản lý tác giả\",\r\n    link: \"/app/authors\",\r\n    icon: <PeopleIcon/>,\r\n    // children: [\r\n    //   { label: \"Icons\", link: \"/app/ui/icons\" },\r\n    //   { label: \"Charts\", link: \"/app/ui/charts\" },\r\n    //   { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    // ],\r\n  },\r\n  { id: 5, label:\"Quản lý đơn hàng\", link: \"/app/order\", icon: <CartIcon /> },\r\n  { id: 6, label: \"Quản lý bình luận\",link: \"/app/review\", icon: <CommentIcon /> },\r\n  { id: 7, label: \"Quản lý người dùng\", link: \"/app/user\", icon: <UserIcon /> },\r\n  { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  // {\r\n  //   id: 12,\r\n  //   label: \"My recent\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\r\n  // },\r\n  // {\r\n  //   id: 13,\r\n  //   label: \"Starred\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\r\n  // },\r\n  // {\r\n  //   id: 14,\r\n  //   label: \"Background\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\Header.js",["285","286","287","288","289","290","291","292","293"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Book Shop Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        {/* <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu> */}\r\n        {/* <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu> */}\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Admin\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\icons\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\maps\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\typography\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Header\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Widget\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\Notification\\styles.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Books.js",["294","295","296","297","298","299","300","301","302","303","304"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { deleteBookById } from \"../../utils/book\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Books(props) {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [bookList, setBookList] = useState([]);\r\n    const history = useHistory();\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [bookToDelete, setBookToDelete] = useState(null);\r\n\r\n    const handleDeleteClick = (book) => {\r\n        setBookToDelete(book);\r\n        setOpenDeleteModal(true);\r\n    };\r\n\r\n    const handleViewDetail = (rowData) => {\r\n        const id = rowData[0];\r\n        console.log(id);\r\n        history.push(`/app/book/detailbook/${id}`);\r\n    };\r\n\r\n    const handleViewUpdate = (rowData) => {\r\n        const id = rowData[0];\r\n        console.log(id);\r\n        history.push(`/app/book/updatebook/${id}`);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (book) => {\r\n        setBookToDelete(book);\r\n        setOpenDeleteModal(true);\r\n      };\r\n\r\n      const handleCloseDeleteModal = () => {\r\n        setOpenDeleteModal(false);\r\n      };\r\n\r\n    // const handleDeleteBook = async (id) => {\r\n    //     const response = await deleteBookById(id);\r\n    //     // Nếu xóa user thành công, cập nhật lại dữ liệu cho bảng\r\n    //     if (response.success) {\r\n    //         setBookList(bookList.filter((book) => book.id !== id));\r\n    //     }\r\n    // };\r\n\r\n    // const handleDeleteConfirm = () => {\r\n    //     setIsDeleting(true);\r\n    //     axios.delete(`${BASE_URL}/api/book/book/${selectedBook[0]}/`)\r\n    //         .then(response => {\r\n    //             // Xóa thành công, cập nhật danh sách các sách\r\n    //             props.fetchBooks();\r\n    //             setIsDeleting(false);\r\n    //             setSelectedBook(null);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error(error);\r\n    //             setIsDeleting(false);\r\n    //         });\r\n    // };\r\n\r\n\r\n    // Sử dụng useEffect hook để lấy danh sách \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const books = await axios.get(\"http://127.0.0.1:8000/api/book/books/\");\r\n            setBookList(books.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(\"Sách\", bookList);\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Đầu sách\" />\r\n            <Link to=\"/app/book/addbook\"><Button\r\n                variant=\"primary\"\r\n                onClick={() => console.log(\"Update\")}>\r\n                Thêm sách mới\r\n            </Button></Link>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách đầu sách\"\r\n                        data={bookList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"book_name\",\r\n                                label: \"Tên sách\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"image\",\r\n                                label: \"Hình ảnh\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                        return (\r\n                                            <img src={BASE_URL + value} alt={tableMeta.rowData[0]} style={{ width: 100 }} />\r\n                                        );\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"unit_price\",\r\n                                label: \"Đơn giá\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"qty\",\r\n                                label: \"Số lượng còn\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"total_qty\",\r\n                                label: \"Tổng số lượng\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                name: \"\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                        return (\r\n                                            <div className={classes.buttonsContainer}>\r\n                                                {/* <Link to=\"/app/book/detailbook\"> */}\r\n                                                <Button\r\n                                                    variant=\"success\"\r\n                                                    onClick={() => { handleViewDetail(tableMeta.rowData) }}\r\n                                                >\r\n                                                    Chi tiết\r\n                                                </Button>\r\n\r\n                                                {\" \"}\r\n                                                {/* <Link to=\"/app/book/updatebook\"> */}\r\n                                                <Button\r\n                                                    variant=\"primary\"\r\n                                                    onClick={() => { handleViewUpdate(tableMeta.rowData) }}\r\n                                                >\r\n                                                    Sửa\r\n                                                </Button>\r\n                                                {\" \"}\r\n                                                <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow(tableMeta.rowData)}\r\n                                                    >Xóa</Button>\r\n                                                {/* <Button variant=\"danger\" onClick={() => handleDeleteClick(tableMeta.rowData)}>\r\n                                                    Xóa\r\n                                                </Button> */}\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                }\r\n                            }]\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n                    <Modal show={show} onHide={handleClose} centered>\r\n                    {/* <Modal open={selectedBook !== null} onClose={() => setSelectedBook(null)}> */}\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\"onClick={handleDeleteConfirm}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Add_book.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Detail_book.js",["305","306","307","308","309"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from \"../../config\";\r\n\r\n\r\nexport default function DetailBook({ match }) {\r\n    const { id } = match.params;\r\n    const [bookDetail, setBookDetail] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [authors, setAuthors] = useState([]);\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        \r\n        // Gọi API hoặc lấy dữ liệu từ database để lấy thông tin chi tiết của sách\r\n        const fetchBookDetail = async () => {\r\n          const book = await axios.get(BASE_URL + \"/api/book/books/\"+ id + '/');\r\n          setBookDetail(book.data);\r\n        };\r\n        fetchBookDetail();\r\n      }, []);\r\n      console.log(bookDetail);\r\n    \r\n      if (!bookDetail) {\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table striped bordered hover size=\"lg\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <td colSpan={2}>{bookDetail.id}</td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tên sách</th>\r\n                        <td>{bookDetail.book_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Kích thước</th>\r\n                        <td>{bookDetail.dimensions}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số trang</th>\r\n                        <td>{bookDetail.pages}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày xuất bản</th>\r\n                        <td>{bookDetail.publication_date}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Nhà xuất bản</th>\r\n                        <td>{bookDetail.publisher}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngôn ngữ</th>\r\n                        <td>{bookDetail.language}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Đơn giá</th>\r\n                        <td>{bookDetail.unit_price}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Trạng thái</th>\r\n                        <td>{bookDetail.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Số lượng tồn</th>\r\n                        <td>{bookDetail.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tổng số lượng</th>\r\n                        <td>{bookDetail.total_qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Thể loại</th>\r\n                        <td>{bookDetail.category.category_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Tác giả</th>\r\n                        <td>{bookDetail.author.author_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Hình ảnh</th>\r\n                        <td><img src={BASE_URL + bookDetail.image} alt={bookDetail.book_name} style={{ width: 100 }}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Mô tả</th>\r\n                        <td>{bookDetail.description}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày tạo</th>\r\n                        <td>{bookDetail.created_at}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Ngày cập nhật</th>\r\n                        <td>{bookDetail.updated_at}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\books\\Update_book.js",["310","311","312","313"],"import {Button} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../config';\r\n\r\nfunction UpdateBook({match}) {\r\n  const [book, setBook] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const {id} = match.params;\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/book/books/\"+ id + '/')\r\n      .then(res => {\r\n        setBook(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n      \r\n  }, []);\r\nconsole.log(book);\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + '/api/category/categories/')\r\n      .then(res => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n    \r\n    axios.get(BASE_URL + '/api/author/authors/')\r\n      .then(res => {\r\n        setAuthors(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  console.log(categories);\r\n  console.log(authors);\r\n  const categoryOptions = categories.map((category) => (\r\n    <option key={category.id} value={category.id}>\r\n      {category.category_name}\r\n    </option>\r\n  ));\r\n\r\n\r\n  const authorOptions = authors.map((author) => (\r\n    <option key={author.id} value={author.id}>\r\n      {author.author_name}\r\n    </option>\r\n  ));\r\n  \r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBook({ ...book, [name]: value });\r\n  };\r\n\r\n  // const handleChange = e => {\r\n  //   setBook({\r\n  //     ...book,\r\n  //     [e.target.name]: e.target.value\r\n  //   });\r\n  // };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    axios.put(BASE_URL + \"/api/book/book/\"+ id + '/', book)\r\n      .then(res => {\r\n        history.push('/books/');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // if (loading) {\r\n  //   return <p>Loading...</p>;\r\n  // }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n    <Form.Group className=\"mb-3\">\r\n        <Form.Label>Tên sách</Form.Label>\r\n        <Form.Control name=\"book_name\" value={book.book_name} onChange={handleChange}/>\r\n      </Form.Group>\r\n      <Row className=\"mb-3\">\r\n        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n          <Form.Label>Kích thước</Form.Label>\r\n          <Form.Control name=\"dimensions\" value={book.dimensions} onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n          <Form.Label>Số trang</Form.Label>\r\n          <Form.Control type=\"number\" name=\"pages\" value={book.pages} onChange={handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n          <Form.Label>Ngày xuất bản</Form.Label>\r\n          <Form.Control type=\"date\" name=\"publication_date\" value={book.publication_date} onChange={handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Nhà xuất bản</Form.Label>\r\n        <Form.Control/>\r\n      </Form.Group>\r\n      </Row>\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Chọn file ảnh</Form.Label>\r\n        <Form.Control type=\"file\" name=\"image\" value={book.image} onChange={handleChange}/>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n        <Form.Label>Mô tả</Form.Label>\r\n        <Form.Control as=\"textarea\" value={book.description} onChange={handleChange}/>\r\n      </Form.Group>\r\n      <Row className=\"mb-3\">\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Đơn giá</Form.Label>\r\n        <Form.Control type=\"number\" name=\"unit_price\" value={book.unit_price} onChange={handleChange}/>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Số lượng tồn</Form.Label>\r\n        <Form.Control type='number' name=\"qty\" value={book.qty} onChange={handleChange}/>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n        <Form.Label>Tổng số lượng</Form.Label>\r\n        <Form.Control type='number' name=\"total_qty\" value={book.total_qty} onChange={handleChange}/>\r\n      </Form.Group>\r\n      \r\n    </Row>\r\n      <Row className=\"mb-3\">\r\n        <Form.Group as={Col} controlId=\"formGridCity\">\r\n          <Form.Label>Thể loại</Form.Label>\r\n          <Form.Select name=\"category\" value={book.category ? book.category.id : ''} onChange={handleChange}>\r\n            <option>Choose...</option>\r\n            {/* {categories.map(category => (\r\n            <option key={category.id} value={category.id}>{category.category_name}</option>\r\n          ))} */}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridState\">\r\n          <Form.Label>Tác giả</Form.Label>\r\n          <Form.Select name=\"author\" value={book.author ? book.author.id : ''} onChange={handleChange}>\r\n            <option>Choose...</option>\r\n            {/* {authors.map(author => (\r\n            <option key={author.id} value={author.id}>{author.author_name}</option>\r\n          ))} */}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridZip\">\r\n          <Form.Label>Ngôn ngữ</Form.Label>\r\n          <Form.Control name=\"language\" value={book.language} onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridZip\">\r\n          <Form.Label>Trạng thái</Form.Label>\r\n          <Form.Select name=\"status\" value={book.status} onChange={handleChange}>\r\n            <option value=\"IN STOCK\">Available</option>\r\n            <option value=\"OUT OF STOCK\">Out of stock</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n      </Row>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Lưu\r\n      </Button>\r\n        {\" \"}\r\n      <Button variant=\"danger\" type=\"reset\">\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateBook;","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Authors.js",["314","315","316","317"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Authors() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [authorList, setAuthorList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const authors = await axios.get(BASE_URL + \"/api/author/authors/\");\r\n            setAuthorList(authors.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Tác giả\" />\r\n            <Link to=\"/app/author/addauthor\"><Button\r\n                variant=\"primary\"\r\n                onClick={() => console.log(\"Add\")}>\r\n                Thêm tác giả mới\r\n            </Button></Link>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách tác giả\"\r\n                        data={authorList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"author_name\",\r\n                                label: \"Tên tác giả\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"author_image\",\r\n                                label: \"Hình ảnh\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                      return (\r\n                                        <img src={BASE_URL + value} alt={tableMeta.rowData[0]} style={{ width: 100 }} />\r\n                                      );\r\n                                    },\r\n                                  },\r\n                              },\r\n                              {\r\n                                name: \"description\",\r\n                                label: \"Mô tả\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    {/* <Link to=\"/app/author/detailauthor\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    <Link to=\"/app/author/updateauthor\">\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => console.log(\"Update\")}\r\n                                                    >\r\n                                                        <EditIcon/>\r\n                                                    </Button></Link>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    ><DeleteIcon/></Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n                    <Modal show= {show} onHide ={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Add_author.js",["318","319"],"import {Button} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React from 'react';\r\n\r\nfunction AddAuthor() {\r\n  return (\r\n    <Form>\r\n    <Form.Group className=\"mb-3\">\r\n        <Form.Label>Tên tác giả</Form.Label>\r\n        <Form.Control/>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Chọn file ảnh tác giả</Form.Label>\r\n        <Form.Control type=\"file\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n        <Form.Label>Mô tả</Form.Label>\r\n        <Form.Control as=\"textarea\"/>\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Lưu\r\n      </Button>\r\n        {\" \"}\r\n      <Button variant=\"danger\" type=\"submit\">\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AddAuthor;","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\authors\\Update_author.js",["320","321"],"import {Button} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React from 'react';\r\n\r\nfunction UpdateAuthor() {\r\n  return (\r\n    <Form>\r\n    <Form.Group className=\"mb-3\">\r\n        <Form.Label>Tên tác giả</Form.Label>\r\n        <Form.Control/>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Chọn file ảnh tác giả</Form.Label>\r\n        <Form.Control type=\"file\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n        <Form.Label>Mô tả</Form.Label>\r\n        <Form.Control as=\"textarea\"/>\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Lưu\r\n      </Button>\r\n        {\" \"}\r\n      <Button variant=\"danger\" type=\"submit\">\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateAuthor;","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\category\\Categories.js",["322","323","324","325","326"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst datatableData = [\r\n    [\"Joe James\", \"Example Inc.\", \"Yonkers\", 100, 240, \"2023-03-21 16:00:01.675556\", \"2023-03-21 16:00:01.675556\"],\r\n    [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconsole.log(datatableData);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Categories() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [add, setAdd] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const showAdd = () => setAdd(true);\r\n    const closeAdd = () => setAdd(false);\r\n    const showUpdate = () => setUpdate(true);\r\n    const closeUpdate = () => setUpdate(false);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const categories = await axios.get(\"http://127.0.0.1:8000/api/category/categories/\");\r\n            console.log(categories);\r\n            setCategoryList(categories.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(\"Thể loại\", categoryList);\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Thể loại\" />\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={showAdd}>\r\n                Thêm thể loại mới\r\n            </Button>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách thể loại\"\r\n                        data={categoryList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"category_name\",\r\n                                label: \"Tên thể loại\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              }, \r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"updated_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              }, \r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    {/* <Link to=\"/app/author/detailauthor\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={showUpdate}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                            selectableRows: \"none\",\r\n                            responsive: \"standard\",\r\n                            filter: true,\r\n                            search: true,\r\n                            pagination: true,\r\n                            rowsPerPageOptions: [5, 10, 20],\r\n                        }}\r\n                    />\r\n                    <Modal show= {show} onHide ={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show= {add} onHide ={closeAdd} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Thêm thể loại mới</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên thể loại</Form.Label>\r\n                                <Form.Control/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show= {update} onHide ={closeUpdate} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Sửa thể loại</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Tên thể loại</Form.Label>\r\n                                <Form.Control/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\review\\Review.js",["327","328","329","330","331","332"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport { Edit as EditIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Reviews() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [reviewList, setReviewList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const reviews = await axios.get(BASE_URL + \"/api/review/reviews/\");\r\n            setReviewList(reviews.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(reviewList);\r\n    console.log();\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Bình luận\" />\r\n            {/* <Link to=\"/app/category/addcategory\"><Button\r\n                variant=\"primary\"\r\n                onClick={() => console.log(\"Add\")}>\r\n                Thêm thể loại mới\r\n            </Button></Link> */}\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách bình luận\"\r\n                        data={reviewList}\r\n                        columns={\r\n                            [{\r\n                                name: \"id\",\r\n                                label: \"ID\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"fullname\",\r\n                                label: \"Họ tên\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"book_name\",\r\n                                label: \"Tên sách\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"star\",\r\n                                label: \"Số sao\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"comment\",\r\n                                label: \"Bình luận\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"image\",\r\n                                label: \"Hình ảnh\",\r\n                                options: {\r\n                                    filter: false,\r\n                                    sort: false,\r\n                                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                                      return (\r\n                                        <img src={BASE_URL + value} alt={tableMeta.rowData[0]} style={{ width: 100 }} />\r\n                                      );\r\n                                    },\r\n                                  },\r\n                              },\r\n                              {\r\n                                name: \"created_at\",\r\n                                label: \"Thời gian tạo\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                              {\r\n                                name: \"uploaded_at\",\r\n                                label: \"Thời gian cập nhật\",\r\n                                options: {\r\n                                  filter: false,\r\n                                  sort: true,\r\n                                },\r\n                              },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    {/* <Link to=\"/app/author/detailauthor\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    {/* <Link to=\"/app/review/updatereview\">\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => console.log(\"Update\")}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button></Link> */}\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    ><DeleteIcon/></Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                        }}\r\n                    />\r\n                    <Modal show= {show} onHide ={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\components\\User\\User.js",["333"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst datatableData = [\r\n    [\"Joe James\", \"Example Inc.\", \"Yonkers\", 100, 240, \"2023-03-21 16:00:01.675556\", \"2023-03-21 16:00:01.675556\"],\r\n    [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconsole.log(datatableData);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Users() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [add, setAdd] = useState(false);\r\n    const showAdd = () => setAdd(true);\r\n    const closeAdd = () => setAdd(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const showUpdate = () => setUpdate(true);\r\n    const closeUpdate = () => setUpdate(false);\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Người dùng\" />\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={showAdd}>\r\n                Thêm người dùng mới\r\n            </Button>\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách người dùng\"\r\n                        data={datatableData}\r\n                        columns={\r\n                            [\"Tên người dùng\", \"Email\", \"Thời gian đăng nhập\", \"Quản trị viên\",\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                        <Button\r\n                                                            variant=\"primary\"\r\n                                                            onClick={showUpdate}\r\n                                                        >\r\n                                                            Sửa\r\n                                                        </Button>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                        }}\r\n                    />\r\n                    <Modal show={show} onHide={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={add} onHide={closeAdd} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Thêm người dùng mới</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Họ và tên</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"file\" />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                    <Form.Label>Mật khẩu</Form.Label>\r\n                                    <Form.Control as=\"textarea\" />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                    <Form.Label>Quản trị viên</Form.Label>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Người dùng\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios1\"\r\n                                        defaultChecked\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Quản trị viên\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios2\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={closeAdd}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <Modal show={update} onHide={closeUpdate} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Sửa thông tin người dùng</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Họ và tên</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"file\" />\r\n                                </Form.Group>\r\n                                {/* <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                    <Form.Label>Mật khẩu</Form.Label>\r\n                                    <Form.Control as=\"textarea\" />\r\n                                </Form.Group> */}\r\n                                <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                    <Form.Label>Quản trị viên</Form.Label>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Người dùng\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios1\"\r\n                                        defaultChecked\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Quản trị viên\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"formHorizontalRadios2\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Lưu\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={closeUpdate}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table data={mock.table} />\r\n                    </Widget>\r\n                </Grid> */}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Orders.js",["334","335","336","337","338"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n// import { Button } from \"../../components/Wrappers/Wrappers\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport classnames from \"classnames\";\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nconst datatableData = [\r\n    [\"121231\", \"Yonkers\",\"012313112\", 100, \"2023-03-21 16:00:01.675556\", \"2023-03-21 16:00:01.675556\", \"Pending\"],\r\n    [\"121231\", \"Yonkers\",\"012313112\", 100, \"2023-03-21 16:00:01.675556\", \"2023-03-21 16:00:01.675556\", \"Completed\"],\r\n    [\"121231\", \"Yonkers\",\"012313112\", 100, \"2023-03-21 16:00:01.675556\", \"2023-03-21 16:00:01.675556\", \"Cancelled\"],\r\n    [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n    [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n    [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n    [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n    [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconst states = {\r\n    completed: \"success\",\r\n    pending: \"warning\",\r\n    cancelled: \"secondary\",\r\n  };\r\n\r\nconsole.log(datatableData);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\n\r\nexport default function Order() {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Quản lý đơn hàng\" />\r\n\r\n            <Grid container spacing={4} style={{ marginTop: \"20px\" }}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title=\"Danh sách đơn hàng\"\r\n                        data={datatableData}\r\n                        columns={\r\n                            [\"Mã đơn hàng\", \"Họ tên\", \"Số điện thoại\", \"Tổng tiền\", \"Thời gian tạo\", \"Thời gian cập nhật\",\r\n                            {\r\n                                name: \"Trạng thái\",\r\n                                options:{\r\n                                    customBodyRender: (value)=>{\r\n                                        let color;\r\n                                        switch(value){\r\n                                            case 'Pending':\r\n                                                color = 'orange';\r\n                                                break;\r\n                                            case 'Completed':\r\n                                                color = 'green';\r\n                                                break;\r\n                                            case 'Cancelled':\r\n                                                color = 'red';\r\n                                                break;\r\n                                            default:\r\n                                                color = 'transparent';\r\n                                                break;\r\n                                        }\r\n                                        return(\r\n                                            <div style={{backgroundColor: color, borderRadius: \"15px\", padding: \"5px\", textAlign: \"center\", color: \"white\"}}>\r\n                                                {value}\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                                {\r\n                                    name: \"\",\r\n                                    options: {\r\n                                        filter: false,\r\n                                        sort: false,\r\n                                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                                            return (\r\n                                                <div className={classes.buttonsContainer}>\r\n                                                    <Link to=\"/app/order/orderdetail\">\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        onClick={() => console.log(\"Detail\")}\r\n                                                    >\r\n                                                        Chi tiết\r\n                                                    </Button></Link>\r\n                                                    {\" \"}\r\n                                                    <Link to=\"/app/book/updatebook\">\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => console.log(\"Update\")}\r\n                                                    >\r\n                                                        Sửa\r\n                                                    </Button></Link>\r\n                                                    {\" \"}\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        onClick={handleShow}\r\n                                                    >Xóa</Button>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n\r\n                        }\r\n                        options={{\r\n                            filterType: \"checkbox\",\r\n                        }}\r\n                    />\r\n                    <Modal show= {show} onHide ={handleClose} centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xác nhận xóa</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            Bạn chắc chắn xóa trường dữ liệu này?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" onClick={handleClose}>\r\n                                Đồng ý\r\n                            </Button>\r\n                            {\" \"}\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Hủy\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\pages\\order\\Detail_order.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\utils\\book.js",[],"C:\\Users\\pc\\Desktop\\Nam 4\\ĐATN\\admin\\FE_admin_bookshop\\src\\config.js",[],{"ruleId":"339","severity":1,"message":"340","line":8,"column":13,"nodeType":"341","messageId":"342","endLine":8,"endColumn":26},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"339","severity":1,"message":"347","line":5,"column":3,"nodeType":"341","messageId":"342","endLine":5,"endColumn":11},{"ruleId":"339","severity":1,"message":"348","line":21,"column":8,"nodeType":"341","messageId":"342","endLine":21,"endColumn":13},{"ruleId":"343","replacedBy":"349"},{"ruleId":"345","replacedBy":"350"},{"ruleId":"339","severity":1,"message":"351","line":4,"column":3,"nodeType":"341","messageId":"342","endLine":4,"endColumn":17},{"ruleId":"339","severity":1,"message":"352","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":9},{"ruleId":"339","severity":1,"message":"353","line":14,"column":3,"nodeType":"341","messageId":"342","endLine":14,"endColumn":12},{"ruleId":"339","severity":1,"message":"354","line":15,"column":3,"nodeType":"341","messageId":"342","endLine":15,"endColumn":12},{"ruleId":"339","severity":1,"message":"355","line":18,"column":3,"nodeType":"341","messageId":"342","endLine":18,"endColumn":11},{"ruleId":"339","severity":1,"message":"356","line":19,"column":3,"nodeType":"341","messageId":"342","endLine":19,"endColumn":6},{"ruleId":"339","severity":1,"message":"357","line":20,"column":3,"nodeType":"341","messageId":"342","endLine":20,"endColumn":7},{"ruleId":"339","severity":1,"message":"358","line":35,"column":8,"nodeType":"341","messageId":"342","endLine":35,"endColumn":15},{"ruleId":"339","severity":1,"message":"359","line":38,"column":7,"nodeType":"341","messageId":"342","endLine":38,"endColumn":19},{"ruleId":"339","severity":1,"message":"360","line":5,"column":24,"nodeType":"341","messageId":"342","endLine":5,"endColumn":41},{"ruleId":"339","severity":1,"message":"361","line":6,"column":17,"nodeType":"341","messageId":"342","endLine":6,"endColumn":31},{"ruleId":"339","severity":1,"message":"362","line":8,"column":16,"nodeType":"341","messageId":"342","endLine":8,"endColumn":25},{"ruleId":"339","severity":1,"message":"363","line":10,"column":19,"nodeType":"341","messageId":"342","endLine":10,"endColumn":30},{"ruleId":"339","severity":1,"message":"364","line":28,"column":8,"nodeType":"341","messageId":"342","endLine":28,"endColumn":11},{"ruleId":"339","severity":1,"message":"365","line":9,"column":3,"nodeType":"341","messageId":"342","endLine":9,"endColumn":6},{"ruleId":"339","severity":1,"message":"366","line":10,"column":3,"nodeType":"341","messageId":"342","endLine":10,"endColumn":7},{"ruleId":"339","severity":1,"message":"367","line":14,"column":18,"nodeType":"341","messageId":"342","endLine":14,"endColumn":26},{"ruleId":"339","severity":1,"message":"360","line":15,"column":24,"nodeType":"341","messageId":"342","endLine":15,"endColumn":41},{"ruleId":"339","severity":1,"message":"368","line":18,"column":11,"nodeType":"341","messageId":"342","endLine":18,"endColumn":19},{"ruleId":"339","severity":1,"message":"369","line":27,"column":10,"nodeType":"341","messageId":"342","endLine":27,"endColumn":15},{"ruleId":"339","severity":1,"message":"352","line":27,"column":29,"nodeType":"341","messageId":"342","endLine":27,"endColumn":35},{"ruleId":"339","severity":1,"message":"370","line":28,"column":8,"nodeType":"341","messageId":"342","endLine":28,"endColumn":20},{"ruleId":"339","severity":1,"message":"371","line":29,"column":8,"nodeType":"341","messageId":"342","endLine":29,"endColumn":18},{"ruleId":"339","severity":1,"message":"372","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"373","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":13},{"ruleId":"339","severity":1,"message":"374","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":18},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":12},{"ruleId":"339","severity":1,"message":"376","line":16,"column":10,"nodeType":"341","messageId":"342","endLine":16,"endColumn":24},{"ruleId":"339","severity":1,"message":"377","line":34,"column":12,"nodeType":"341","messageId":"342","endLine":34,"endColumn":27},{"ruleId":"339","severity":1,"message":"378","line":35,"column":12,"nodeType":"341","messageId":"342","endLine":35,"endColumn":24},{"ruleId":"339","severity":1,"message":"379","line":37,"column":11,"nodeType":"341","messageId":"342","endLine":37,"endColumn":28},{"ruleId":"339","severity":1,"message":"380","line":54,"column":11,"nodeType":"341","messageId":"342","endLine":54,"endColumn":32},{"ruleId":"339","severity":1,"message":"381","line":59,"column":13,"nodeType":"341","messageId":"342","endLine":59,"endColumn":35},{"ruleId":"382","severity":2,"message":"383","line":236,"column":63,"nodeType":"341","messageId":"384","endLine":236,"endColumn":82},{"ruleId":"339","severity":1,"message":"385","line":11,"column":12,"nodeType":"341","messageId":"342","endLine":11,"endColumn":22},{"ruleId":"339","severity":1,"message":"386","line":11,"column":24,"nodeType":"341","messageId":"342","endLine":11,"endColumn":37},{"ruleId":"339","severity":1,"message":"387","line":12,"column":12,"nodeType":"341","messageId":"342","endLine":12,"endColumn":19},{"ruleId":"339","severity":1,"message":"388","line":12,"column":21,"nodeType":"341","messageId":"342","endLine":12,"endColumn":31},{"ruleId":"389","severity":1,"message":"390","line":23,"column":10,"nodeType":"391","endLine":23,"endColumn":12,"suggestions":"392"},{"ruleId":"339","severity":1,"message":"393","line":14,"column":10,"nodeType":"341","messageId":"342","endLine":14,"endColumn":17},{"ruleId":"389","severity":1,"message":"390","line":26,"column":6,"nodeType":"391","endLine":26,"endColumn":8,"suggestions":"394"},{"ruleId":"339","severity":1,"message":"395","line":43,"column":9,"nodeType":"341","messageId":"342","endLine":43,"endColumn":24},{"ruleId":"339","severity":1,"message":"396","line":50,"column":9,"nodeType":"341","messageId":"342","endLine":50,"endColumn":22},{"ruleId":"339","severity":1,"message":"372","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"373","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":13},{"ruleId":"339","severity":1,"message":"374","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":18},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":12},{"ruleId":"339","severity":1,"message":"397","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":11},{"ruleId":"339","severity":1,"message":"398","line":4,"column":8,"nodeType":"341","messageId":"342","endLine":4,"endColumn":11},{"ruleId":"339","severity":1,"message":"397","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":11},{"ruleId":"339","severity":1,"message":"398","line":4,"column":8,"nodeType":"341","messageId":"342","endLine":4,"endColumn":11},{"ruleId":"339","severity":1,"message":"372","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"373","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":13},{"ruleId":"339","severity":1,"message":"374","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":18},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":12},{"ruleId":"339","severity":1,"message":"366","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":14},{"ruleId":"339","severity":1,"message":"372","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"373","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":13},{"ruleId":"339","severity":1,"message":"374","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":18},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":12},{"ruleId":"339","severity":1,"message":"366","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":14},{"ruleId":"339","severity":1,"message":"399","line":19,"column":18,"nodeType":"341","messageId":"342","endLine":19,"endColumn":26},{"ruleId":"339","severity":1,"message":"366","line":8,"column":10,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"372","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":14},{"ruleId":"339","severity":1,"message":"373","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":13},{"ruleId":"339","severity":1,"message":"374","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":18},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":12},{"ruleId":"339","severity":1,"message":"400","line":41,"column":7,"nodeType":"341","messageId":"342","endLine":41,"endColumn":13},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["401"],"no-negated-in-lhs",["402"],"'Redirect' is defined but never used.","'learn' is defined but never used.",["401"],["402"],"'LinearProgress' is defined but never used.","'Button' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'BigStat' is defined but never used.","'PieChartData' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'TableIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'Dot' is defined but never used.","'Fab' is defined but never used.","'Link' is defined but never used.","'MailIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'classnames' is defined but never used.","'mock' is defined but never used.","'deleteBookById' is defined but never used.","'openDeleteModal' is assigned a value but never used.","'bookToDelete' is assigned a value but never used.","'handleDeleteClick' is assigned a value but never used.","'handleOpenDeleteModal' is assigned a value but never used.","'handleCloseDeleteModal' is assigned a value but never used.","no-undef","'handleDeleteConfirm' is not defined.","undef","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'authors' is assigned a value but never used.","'setAuthors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["403"],"'loading' is assigned a value but never used.",["404"],"'categoryOptions' is assigned a value but never used.","'authorOptions' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'EditIcon' is defined but never used.","'states' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},"Update the dependencies array to be: [id]",{"range":"408","text":"409"},{"range":"410","text":"409"},[769,771],"[id]",[841,843]]